//*
// API to manage Jetify Sandbox environments

// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts,js_import_style=module"
// @generated from file pub/sandbox/v1alpha1/sandbox.proto (package pub.sandbox.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateSandboxRequest, CreateSandboxResponse, DeleteSandboxRequest, DeleteSandboxResponse, GetSandboxRequest, GetSandboxResponse, ListSandboxesRequest, ListSandboxesResponse, StartSandboxRequest, StartSandboxResponse, StopSandboxRequest, StopSandboxResponse } from "./sandbox_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service pub.sandbox.v1alpha1.SandboxService
 */
export const SandboxService = {
  typeName: "pub.sandbox.v1alpha1.SandboxService",
  methods: {
    /**
     * @generated from rpc pub.sandbox.v1alpha1.SandboxService.CreateSandbox
     */
    createSandbox: {
      name: "CreateSandbox",
      I: CreateSandboxRequest,
      O: CreateSandboxResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc pub.sandbox.v1alpha1.SandboxService.GetSandbox
     */
    getSandbox: {
      name: "GetSandbox",
      I: GetSandboxRequest,
      O: GetSandboxResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc pub.sandbox.v1alpha1.SandboxService.DeleteSandbox
     */
    deleteSandbox: {
      name: "DeleteSandbox",
      I: DeleteSandboxRequest,
      O: DeleteSandboxResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.Idempotent,
    },
    /**
     * @generated from rpc pub.sandbox.v1alpha1.SandboxService.ListSandboxes
     */
    listSandboxes: {
      name: "ListSandboxes",
      I: ListSandboxesRequest,
      O: ListSandboxesResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * Starts sandbox. If sandbox is already starting or running, it does nothing.
     * May return error if sandbox is stopping.
     *
     * @generated from rpc pub.sandbox.v1alpha1.SandboxService.StartSandbox
     */
    startSandbox: {
      name: "StartSandbox",
      I: StartSandboxRequest,
      O: StartSandboxResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Stops sandbox. If sandbox is already stopped, it does nothing.
     * May return error if sandbox is starting.
     *
     * @generated from rpc pub.sandbox.v1alpha1.SandboxService.StopSandbox
     */
    stopSandbox: {
      name: "StopSandbox",
      I: StopSandboxRequest,
      O: StopSandboxResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

