//*
// API to manage Jetify Sandbox environments

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: pub/sandbox/v1alpha1/sandbox.proto

package sandboxv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SandboxState represents the state of a sandbox.
type SandboxState int32

const (
	// Do not use.
	SandboxState_SANDBOX_STATE_UNSPECIFIED SandboxState = 0
	// The workstation is not yet ready to accept requests from users but will
	// be soon.
	SandboxState_SANDBOX_STATE_STARTING SandboxState = 1
	// The workstation is ready to accept requests from users.
	SandboxState_SANDBOX_STATE_RUNNING SandboxState = 2
	// The workstation is being stopped.
	SandboxState_SANDBOX_STATE_STOPPING SandboxState = 3
	// The workstation is stopped and will not be able to receive requests until
	// it is started.
	SandboxState_SANDBOX_STATE_STOPPED SandboxState = 4
	// Reserved for future use. Currently deleted sandboxes are not returned by api.
	SandboxState_SANDBOX_STATE_DELETED SandboxState = 5
)

// Enum value maps for SandboxState.
var (
	SandboxState_name = map[int32]string{
		0: "SANDBOX_STATE_UNSPECIFIED",
		1: "SANDBOX_STATE_STARTING",
		2: "SANDBOX_STATE_RUNNING",
		3: "SANDBOX_STATE_STOPPING",
		4: "SANDBOX_STATE_STOPPED",
		5: "SANDBOX_STATE_DELETED",
	}
	SandboxState_value = map[string]int32{
		"SANDBOX_STATE_UNSPECIFIED": 0,
		"SANDBOX_STATE_STARTING":    1,
		"SANDBOX_STATE_RUNNING":     2,
		"SANDBOX_STATE_STOPPING":    3,
		"SANDBOX_STATE_STOPPED":     4,
		"SANDBOX_STATE_DELETED":     5,
	}
)

func (x SandboxState) Enum() *SandboxState {
	p := new(SandboxState)
	*p = x
	return p
}

func (x SandboxState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SandboxState) Descriptor() protoreflect.EnumDescriptor {
	return file_pub_sandbox_v1alpha1_sandbox_proto_enumTypes[0].Descriptor()
}

func (SandboxState) Type() protoreflect.EnumType {
	return &file_pub_sandbox_v1alpha1_sandbox_proto_enumTypes[0]
}

func (x SandboxState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SandboxState.Descriptor instead.
func (SandboxState) EnumDescriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{0}
}

type CreateSandboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional, user provided. Used for billing.
	ExternalBillingTag   string            `protobuf:"bytes,1,opt,name=external_billing_tag,json=externalBillingTag,proto3" json:"external_billing_tag,omitempty"`
	Repo                 string            `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Subdir               string            `protobuf:"bytes,3,opt,name=subdir,proto3" json:"subdir,omitempty"`
	Ref                  string            `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`
	EnvironmentVariables map[string]string `protobuf:"bytes,5,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional, human readable name for the sandbox.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. Project must belong to organization.
	ProjectId string `protobuf:"bytes,7,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *CreateSandboxRequest) Reset() {
	*x = CreateSandboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSandboxRequest) ProtoMessage() {}

func (x *CreateSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSandboxRequest.ProtoReflect.Descriptor instead.
func (*CreateSandboxRequest) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSandboxRequest) GetExternalBillingTag() string {
	if x != nil {
		return x.ExternalBillingTag
	}
	return ""
}

func (x *CreateSandboxRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *CreateSandboxRequest) GetSubdir() string {
	if x != nil {
		return x.Subdir
	}
	return ""
}

func (x *CreateSandboxRequest) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *CreateSandboxRequest) GetEnvironmentVariables() map[string]string {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *CreateSandboxRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSandboxRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type CreateSandboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sandbox *Sandbox `protobuf:"bytes,1,opt,name=sandbox,proto3" json:"sandbox,omitempty"`
	// This field is experimental and may be removed in the future.
	LongRunningOperationId string `protobuf:"bytes,2,opt,name=long_running_operation_id,json=longRunningOperationId,proto3" json:"long_running_operation_id,omitempty"`
}

func (x *CreateSandboxResponse) Reset() {
	*x = CreateSandboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSandboxResponse) ProtoMessage() {}

func (x *CreateSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSandboxResponse.ProtoReflect.Descriptor instead.
func (*CreateSandboxResponse) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSandboxResponse) GetSandbox() *Sandbox {
	if x != nil {
		return x.Sandbox
	}
	return nil
}

func (x *CreateSandboxResponse) GetLongRunningOperationId() string {
	if x != nil {
		return x.LongRunningOperationId
	}
	return ""
}

type GetSandboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// This field is experimental and may be removed in the future.
	WaitForLongRunningOperationId string `protobuf:"bytes,2,opt,name=wait_for_long_running_operation_id,json=waitForLongRunningOperationId,proto3" json:"wait_for_long_running_operation_id,omitempty"`
}

func (x *GetSandboxRequest) Reset() {
	*x = GetSandboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSandboxRequest) ProtoMessage() {}

func (x *GetSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSandboxRequest.ProtoReflect.Descriptor instead.
func (*GetSandboxRequest) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{2}
}

func (x *GetSandboxRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSandboxRequest) GetWaitForLongRunningOperationId() string {
	if x != nil {
		return x.WaitForLongRunningOperationId
	}
	return ""
}

type GetSandboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sandbox *Sandbox `protobuf:"bytes,1,opt,name=sandbox,proto3" json:"sandbox,omitempty"`
}

func (x *GetSandboxResponse) Reset() {
	*x = GetSandboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSandboxResponse) ProtoMessage() {}

func (x *GetSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSandboxResponse.ProtoReflect.Descriptor instead.
func (*GetSandboxResponse) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{3}
}

func (x *GetSandboxResponse) GetSandbox() *Sandbox {
	if x != nil {
		return x.Sandbox
	}
	return nil
}

type DeleteSandboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSandboxRequest) Reset() {
	*x = DeleteSandboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSandboxRequest) ProtoMessage() {}

func (x *DeleteSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSandboxRequest.ProtoReflect.Descriptor instead.
func (*DeleteSandboxRequest) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteSandboxRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSandboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSandboxResponse) Reset() {
	*x = DeleteSandboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSandboxResponse) ProtoMessage() {}

func (x *DeleteSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSandboxResponse.ProtoReflect.Descriptor instead.
func (*DeleteSandboxResponse) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{5}
}

type ListSandboxesFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. If passed in, only sandboxes for this project are returned.
	// Project must belong to organization
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Optional. If passed in, only sandboxes for this member are returned.
	MemberId string `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *ListSandboxesFilter) Reset() {
	*x = ListSandboxesFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSandboxesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSandboxesFilter) ProtoMessage() {}

func (x *ListSandboxesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSandboxesFilter.ProtoReflect.Descriptor instead.
func (*ListSandboxesFilter) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{6}
}

func (x *ListSandboxesFilter) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListSandboxesFilter) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type ListSandboxesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FetchStatusAndUrl bool                 `protobuf:"varint,1,opt,name=fetch_status_and_url,json=fetchStatusAndUrl,proto3" json:"fetch_status_and_url,omitempty"`
	Filter            *ListSandboxesFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListSandboxesRequest) Reset() {
	*x = ListSandboxesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSandboxesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSandboxesRequest) ProtoMessage() {}

func (x *ListSandboxesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSandboxesRequest.ProtoReflect.Descriptor instead.
func (*ListSandboxesRequest) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{7}
}

func (x *ListSandboxesRequest) GetFetchStatusAndUrl() bool {
	if x != nil {
		return x.FetchStatusAndUrl
	}
	return false
}

func (x *ListSandboxesRequest) GetFilter() *ListSandboxesFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListSandboxesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sandboxes []*Sandbox `protobuf:"bytes,1,rep,name=sandboxes,proto3" json:"sandboxes,omitempty"`
}

func (x *ListSandboxesResponse) Reset() {
	*x = ListSandboxesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSandboxesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSandboxesResponse) ProtoMessage() {}

func (x *ListSandboxesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSandboxesResponse.ProtoReflect.Descriptor instead.
func (*ListSandboxesResponse) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{8}
}

func (x *ListSandboxesResponse) GetSandboxes() []*Sandbox {
	if x != nil {
		return x.Sandboxes
	}
	return nil
}

type StartSandboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StartSandboxRequest) Reset() {
	*x = StartSandboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSandboxRequest) ProtoMessage() {}

func (x *StartSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSandboxRequest.ProtoReflect.Descriptor instead.
func (*StartSandboxRequest) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{9}
}

func (x *StartSandboxRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StartSandboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sandbox *Sandbox `protobuf:"bytes,1,opt,name=sandbox,proto3" json:"sandbox,omitempty"`
	// This field is experimental and may be removed in the future.
	LongRunningOperationId string `protobuf:"bytes,2,opt,name=long_running_operation_id,json=longRunningOperationId,proto3" json:"long_running_operation_id,omitempty"`
}

func (x *StartSandboxResponse) Reset() {
	*x = StartSandboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSandboxResponse) ProtoMessage() {}

func (x *StartSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSandboxResponse.ProtoReflect.Descriptor instead.
func (*StartSandboxResponse) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{10}
}

func (x *StartSandboxResponse) GetSandbox() *Sandbox {
	if x != nil {
		return x.Sandbox
	}
	return nil
}

func (x *StartSandboxResponse) GetLongRunningOperationId() string {
	if x != nil {
		return x.LongRunningOperationId
	}
	return ""
}

type StopSandboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StopSandboxRequest) Reset() {
	*x = StopSandboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSandboxRequest) ProtoMessage() {}

func (x *StopSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSandboxRequest.ProtoReflect.Descriptor instead.
func (*StopSandboxRequest) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{11}
}

func (x *StopSandboxRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StopSandboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sandbox *Sandbox `protobuf:"bytes,1,opt,name=sandbox,proto3" json:"sandbox,omitempty"`
}

func (x *StopSandboxResponse) Reset() {
	*x = StopSandboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSandboxResponse) ProtoMessage() {}

func (x *StopSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSandboxResponse.ProtoReflect.Descriptor instead.
func (*StopSandboxResponse) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{12}
}

func (x *StopSandboxResponse) GetSandbox() *Sandbox {
	if x != nil {
		return x.Sandbox
	}
	return nil
}

type Sandbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExternalBillingTag string `protobuf:"bytes,2,opt,name=external_billing_tag,json=externalBillingTag,proto3" json:"external_billing_tag,omitempty"`
	Repo               string `protobuf:"bytes,3,opt,name=repo,proto3" json:"repo,omitempty"`
	// The subdirectory within the repo to checkout. Defaults to the root of the repo.
	Subdir string `protobuf:"bytes,4,opt,name=subdir,proto3" json:"subdir,omitempty"`
	// The git ref to checkout. This can be a branch, tag, or commit hash. Defaults to the default branch.
	Ref string `protobuf:"bytes,5,opt,name=ref,proto3" json:"ref,omitempty"`
	// Will be empty if the sandbox is not running. If present, it will contain access token.
	Url   string       `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	State SandboxState `protobuf:"varint,7,opt,name=state,proto3,enum=pub.sandbox.v1alpha1.SandboxState" json:"state,omitempty"`
	// Token used to make requests to the sandbox. Use in the Authorization header as a Bearer token.
	AccessToken string `protobuf:"bytes,8,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The time the sandbox was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The time the sandbox was last updated.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Name      string                 `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. For sandboxes created with a project_id.
	ProjectId string `protobuf:"bytes,12,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *Sandbox) Reset() {
	*x = Sandbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sandbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sandbox) ProtoMessage() {}

func (x *Sandbox) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sandbox.ProtoReflect.Descriptor instead.
func (*Sandbox) Descriptor() ([]byte, []int) {
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP(), []int{13}
}

func (x *Sandbox) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Sandbox) GetExternalBillingTag() string {
	if x != nil {
		return x.ExternalBillingTag
	}
	return ""
}

func (x *Sandbox) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *Sandbox) GetSubdir() string {
	if x != nil {
		return x.Subdir
	}
	return ""
}

func (x *Sandbox) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Sandbox) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Sandbox) GetState() SandboxState {
	if x != nil {
		return x.State
	}
	return SandboxState_SANDBOX_STATE_UNSPECIFIED
}

func (x *Sandbox) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *Sandbox) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Sandbox) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Sandbox) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sandbox) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

var File_pub_sandbox_v1alpha1_sandbox_proto protoreflect.FileDescriptor

var file_pub_sandbox_v1alpha1_sandbox_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x75, 0x62, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x02, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75,
	0x62, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x64,
	0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x72, 0x65, 0x66, 0x12, 0x79, 0x0a, 0x15, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x1a, 0x47, 0x0a, 0x19, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x01, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x12, 0x39,
	0x0a, 0x19, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x6c, 0x6f, 0x6e, 0x67, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49,
	0x0a, 0x22, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f,
	0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x77, 0x61, 0x69, 0x74,
	0x46, 0x6f, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52,
	0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x66, 0x65, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x41, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x41, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x52, 0x09, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x22,
	0x25, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52,
	0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x12, 0x39, 0x0a, 0x19, 0x6c, 0x6f, 0x6e, 0x67,
	0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6c, 0x6f, 0x6e,
	0x67, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x13, 0x53, 0x74, 0x6f,
	0x70, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x52, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x22, 0xa1, 0x03, 0x0a, 0x07, 0x53, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x75, 0x62, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62,
	0x64, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x2a, 0xb6, 0x01,
	0x0a, 0x0c, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x19, 0x53, 0x41, 0x4e, 0x44, 0x42, 0x4f, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a,
	0x16, 0x53, 0x41, 0x4e, 0x44, 0x42, 0x4f, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x41, 0x4e,
	0x44, 0x42, 0x4f, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x41, 0x4e, 0x44, 0x42, 0x4f, 0x58, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x03,
	0x12, 0x19, 0x0a, 0x15, 0x53, 0x41, 0x4e, 0x44, 0x42, 0x4f, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x53,
	0x41, 0x4e, 0x44, 0x42, 0x4f, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x05, 0x32, 0x88, 0x05, 0x0a, 0x0e, 0x53, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x12, 0x2a, 0x2e, 0x70, 0x75, 0x62,
	0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x12, 0x27, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x75, 0x62,
	0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x12, 0x2a, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03,
	0x90, 0x02, 0x02, 0x12, 0x6d, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90,
	0x02, 0x01, 0x12, 0x67, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x12, 0x29, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0b, 0x53,
	0x74, 0x6f, 0x70, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x12, 0x28, 0x2e, 0x70, 0x75, 0x62,
	0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0xdc, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0c,
	0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40,
	0x67, 0x6f, 0x2e, 0x6a, 0x65, 0x74, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x78,
	0x69, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x75, 0x62, 0x2f,
	0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x3b, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0xa2, 0x02, 0x03, 0x50, 0x53, 0x58, 0xaa, 0x02, 0x14, 0x50, 0x75, 0x62, 0x2e, 0x53, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x14,
	0x50, 0x75, 0x62, 0x5c, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x5c, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x20, 0x50, 0x75, 0x62, 0x5c, 0x53, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x50, 0x75, 0x62, 0x3a, 0x3a, 0x53,
	0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pub_sandbox_v1alpha1_sandbox_proto_rawDescOnce sync.Once
	file_pub_sandbox_v1alpha1_sandbox_proto_rawDescData = file_pub_sandbox_v1alpha1_sandbox_proto_rawDesc
)

func file_pub_sandbox_v1alpha1_sandbox_proto_rawDescGZIP() []byte {
	file_pub_sandbox_v1alpha1_sandbox_proto_rawDescOnce.Do(func() {
		file_pub_sandbox_v1alpha1_sandbox_proto_rawDescData = protoimpl.X.CompressGZIP(file_pub_sandbox_v1alpha1_sandbox_proto_rawDescData)
	})
	return file_pub_sandbox_v1alpha1_sandbox_proto_rawDescData
}

var file_pub_sandbox_v1alpha1_sandbox_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_pub_sandbox_v1alpha1_sandbox_proto_goTypes = []any{
	(SandboxState)(0),             // 0: pub.sandbox.v1alpha1.SandboxState
	(*CreateSandboxRequest)(nil),  // 1: pub.sandbox.v1alpha1.CreateSandboxRequest
	(*CreateSandboxResponse)(nil), // 2: pub.sandbox.v1alpha1.CreateSandboxResponse
	(*GetSandboxRequest)(nil),     // 3: pub.sandbox.v1alpha1.GetSandboxRequest
	(*GetSandboxResponse)(nil),    // 4: pub.sandbox.v1alpha1.GetSandboxResponse
	(*DeleteSandboxRequest)(nil),  // 5: pub.sandbox.v1alpha1.DeleteSandboxRequest
	(*DeleteSandboxResponse)(nil), // 6: pub.sandbox.v1alpha1.DeleteSandboxResponse
	(*ListSandboxesFilter)(nil),   // 7: pub.sandbox.v1alpha1.ListSandboxesFilter
	(*ListSandboxesRequest)(nil),  // 8: pub.sandbox.v1alpha1.ListSandboxesRequest
	(*ListSandboxesResponse)(nil), // 9: pub.sandbox.v1alpha1.ListSandboxesResponse
	(*StartSandboxRequest)(nil),   // 10: pub.sandbox.v1alpha1.StartSandboxRequest
	(*StartSandboxResponse)(nil),  // 11: pub.sandbox.v1alpha1.StartSandboxResponse
	(*StopSandboxRequest)(nil),    // 12: pub.sandbox.v1alpha1.StopSandboxRequest
	(*StopSandboxResponse)(nil),   // 13: pub.sandbox.v1alpha1.StopSandboxResponse
	(*Sandbox)(nil),               // 14: pub.sandbox.v1alpha1.Sandbox
	nil,                           // 15: pub.sandbox.v1alpha1.CreateSandboxRequest.EnvironmentVariablesEntry
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
}
var file_pub_sandbox_v1alpha1_sandbox_proto_depIdxs = []int32{
	15, // 0: pub.sandbox.v1alpha1.CreateSandboxRequest.environment_variables:type_name -> pub.sandbox.v1alpha1.CreateSandboxRequest.EnvironmentVariablesEntry
	14, // 1: pub.sandbox.v1alpha1.CreateSandboxResponse.sandbox:type_name -> pub.sandbox.v1alpha1.Sandbox
	14, // 2: pub.sandbox.v1alpha1.GetSandboxResponse.sandbox:type_name -> pub.sandbox.v1alpha1.Sandbox
	7,  // 3: pub.sandbox.v1alpha1.ListSandboxesRequest.filter:type_name -> pub.sandbox.v1alpha1.ListSandboxesFilter
	14, // 4: pub.sandbox.v1alpha1.ListSandboxesResponse.sandboxes:type_name -> pub.sandbox.v1alpha1.Sandbox
	14, // 5: pub.sandbox.v1alpha1.StartSandboxResponse.sandbox:type_name -> pub.sandbox.v1alpha1.Sandbox
	14, // 6: pub.sandbox.v1alpha1.StopSandboxResponse.sandbox:type_name -> pub.sandbox.v1alpha1.Sandbox
	0,  // 7: pub.sandbox.v1alpha1.Sandbox.state:type_name -> pub.sandbox.v1alpha1.SandboxState
	16, // 8: pub.sandbox.v1alpha1.Sandbox.created_at:type_name -> google.protobuf.Timestamp
	16, // 9: pub.sandbox.v1alpha1.Sandbox.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 10: pub.sandbox.v1alpha1.SandboxService.CreateSandbox:input_type -> pub.sandbox.v1alpha1.CreateSandboxRequest
	3,  // 11: pub.sandbox.v1alpha1.SandboxService.GetSandbox:input_type -> pub.sandbox.v1alpha1.GetSandboxRequest
	5,  // 12: pub.sandbox.v1alpha1.SandboxService.DeleteSandbox:input_type -> pub.sandbox.v1alpha1.DeleteSandboxRequest
	8,  // 13: pub.sandbox.v1alpha1.SandboxService.ListSandboxes:input_type -> pub.sandbox.v1alpha1.ListSandboxesRequest
	10, // 14: pub.sandbox.v1alpha1.SandboxService.StartSandbox:input_type -> pub.sandbox.v1alpha1.StartSandboxRequest
	12, // 15: pub.sandbox.v1alpha1.SandboxService.StopSandbox:input_type -> pub.sandbox.v1alpha1.StopSandboxRequest
	2,  // 16: pub.sandbox.v1alpha1.SandboxService.CreateSandbox:output_type -> pub.sandbox.v1alpha1.CreateSandboxResponse
	4,  // 17: pub.sandbox.v1alpha1.SandboxService.GetSandbox:output_type -> pub.sandbox.v1alpha1.GetSandboxResponse
	6,  // 18: pub.sandbox.v1alpha1.SandboxService.DeleteSandbox:output_type -> pub.sandbox.v1alpha1.DeleteSandboxResponse
	9,  // 19: pub.sandbox.v1alpha1.SandboxService.ListSandboxes:output_type -> pub.sandbox.v1alpha1.ListSandboxesResponse
	11, // 20: pub.sandbox.v1alpha1.SandboxService.StartSandbox:output_type -> pub.sandbox.v1alpha1.StartSandboxResponse
	13, // 21: pub.sandbox.v1alpha1.SandboxService.StopSandbox:output_type -> pub.sandbox.v1alpha1.StopSandboxResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_pub_sandbox_v1alpha1_sandbox_proto_init() }
func file_pub_sandbox_v1alpha1_sandbox_proto_init() {
	if File_pub_sandbox_v1alpha1_sandbox_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSandboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSandboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetSandboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetSandboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSandboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSandboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListSandboxesFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListSandboxesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListSandboxesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*StartSandboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*StartSandboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*StopSandboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*StopSandboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Sandbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pub_sandbox_v1alpha1_sandbox_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pub_sandbox_v1alpha1_sandbox_proto_goTypes,
		DependencyIndexes: file_pub_sandbox_v1alpha1_sandbox_proto_depIdxs,
		EnumInfos:         file_pub_sandbox_v1alpha1_sandbox_proto_enumTypes,
		MessageInfos:      file_pub_sandbox_v1alpha1_sandbox_proto_msgTypes,
	}.Build()
	File_pub_sandbox_v1alpha1_sandbox_proto = out.File
	file_pub_sandbox_v1alpha1_sandbox_proto_rawDesc = nil
	file_pub_sandbox_v1alpha1_sandbox_proto_goTypes = nil
	file_pub_sandbox_v1alpha1_sandbox_proto_depIdxs = nil
}
