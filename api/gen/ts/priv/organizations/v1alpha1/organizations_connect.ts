//*
// API to manage  an organization.

// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file priv/organizations/v1alpha1/organizations.proto (package priv.organizations.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateOrganizationRequest, CreateOrganizationResponse, DeleteOrganizationRequest, DeleteOrganizationResponse, GetOrganizationRequest, GetOrganizationResponse } from "./organizations_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service priv.organizations.v1alpha1.OrganizationsService
 */
export const OrganizationsService = {
  typeName: "priv.organizations.v1alpha1.OrganizationsService",
  methods: {
    /**
     * @generated from rpc priv.organizations.v1alpha1.OrganizationsService.GetOrganization
     */
    getOrganization: {
      name: "GetOrganization",
      I: GetOrganizationRequest,
      O: GetOrganizationResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc priv.organizations.v1alpha1.OrganizationsService.CreateOrganization
     */
    createOrganization: {
      name: "CreateOrganization",
      I: CreateOrganizationRequest,
      O: CreateOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc priv.organizations.v1alpha1.OrganizationsService.DeleteOrganization
     */
    deleteOrganization: {
      name: "DeleteOrganization",
      I: DeleteOrganizationRequest,
      O: DeleteOrganizationResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

