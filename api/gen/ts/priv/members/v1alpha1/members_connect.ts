//*
// API to manage members of an organization.

// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file priv/members/v1alpha1/members.proto (package priv.members.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateMemberRequest, CreateMemberResponse, DeleteMemberRequest, DeleteMemberResponse, GetMemberRequest, GetMemberResponse } from "./members_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service priv.members.v1alpha1.MembersService
 */
export const MembersService = {
  typeName: "priv.members.v1alpha1.MembersService",
  methods: {
    /**
     * Get logged-in member
     *
     * Retrieves the details of an existing member identified by its unique
     * member id.
     *
     * @generated from rpc priv.members.v1alpha1.MembersService.GetMember
     */
    getMember: {
      name: "GetMember",
      I: GetMemberRequest,
      O: GetMemberResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc priv.members.v1alpha1.MembersService.CreateMember
     */
    createMember: {
      name: "CreateMember",
      I: CreateMemberRequest,
      O: CreateMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc priv.members.v1alpha1.MembersService.DeleteMember
     */
    deleteMember: {
      name: "DeleteMember",
      I: DeleteMemberRequest,
      O: DeleteMemberResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

